[gcode_macro _TAP_PROBE_ACTIVATE]
description: Ensure safe temp for bed probing
gcode:
    {% set max_temp = 150 %}
    {% set actual_temp = printer[params.HEATER].temperature %}
    {% set target_temp = printer[params.HEATER].target %}
    {% if target_temp > max_temp %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (target_temp, max_temp)) }
        SET_HEATER_TEMPERATURE HEATER={params.HEATER} TARGET={ max_temp|int - 5 }
    {% endif %}
    # Temperature target is already low enough, but nozzle may still be too hot.
    {% if actual_temp > max_temp  + 2 %}
        { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (actual_temp, max_temp)) }
        TEMPERATURE_WAIT SENSOR={params.HEATER} MAXIMUM={ max_temp }
    {% endif %}

[gcode_macro PRINT_END]
gcode:
    STOP_TOOL_PROBE_CRASH_DETECTION
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=False
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-9.0 F3600                 ; retract filament

    G91                            ; relative positioning
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 20) %}
        {% set z_safe = 20.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    G0 Z{z_safe} F3600             ; move nozzle up

    TURN_OFF_HEATERS
    M107                           ; turn off fan
    M106 S0 # Turn off part cooling fan, added to try see if fixes issue. Does nothing.
    M140                           ; turn off bed

    G90                            ; absolute positioning
    G1 X150 Y300 F19500
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=360
    CLEAR_ACTIVE_SPOOL
    BED_MESH_CLEAR
    _RESETSPEEDS
    M117 Print done
    STATUS_OFF

[gcode_macro PRINT_START]
gcode:
  {% set TOOL_TEMP = params.TOOL_TEMP|default(150)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
  M117 Initializing...
  INITIALIZE_TOOLCHANGER
  STOP_TOOL_PROBE_CRASH_DETECTION
  CLEAR_PAUSE
  # Start fans
  SET_FAN_SPEED FAN=controller_right SPEED=0.5
  SET_FAN_SPEED FAN=controller_left SPEED=0.5
  SET_PIN PIN=caselight VALUE=0.25

  M117 Homing
  BED_MESH_CLEAR
  G28
  M190 S{BED_TEMP}
  M109 S150 D10
  #NOZZLE_SCRUBBER_W
  G28
  # M117 Cleaning the nozzle
  CLEAN_NOZZLE TEMP={ TOOL_TEMP - 20 }

  M117 Heating up the bed
  M190 S{ BED_TEMP }

  M117 Calibrating bed
  M109 S150 ; Heat up nozzle to soften any leftover filament for homing.
  G32 ; Home, gantry tram
  T0
  #NOZZLE_SCRUBBER_W
  G28 Z
  M117 Adaptive BedMesh
  BED_MESH_CALIBRATE PROFILE=AdaptMesh METHOD=automatic ADAPTIVE=1 ADAPTIVE_MARGIN=0
  M109 S0 # Stop to heat, the actual printing may happen with a different hotend

  {% if printer.toolchanger.tools_preheat %}
    # Preheat all the hotends in use
    {% for tool_nr in printer.toolchanger.tool_numbers %}
      {% set tooltemp_param = 'T' ~ tool_nr|string ~ '_TEMP'%}
      {% if tooltemp_param in params %}
        M109 T{tool_nr} S{params[tooltemp_param]} D160
      {% endif %}
    {% endfor %}

    #PRIME_LINES INITIAL_TOOL={initial_tool}

    {% if params.TOOL is defined %}
      T{params.TOOL}
    {% endif %}
  {% endif %}

  M117 Heating up the hotend
  G90 ; Absolute positioning
  G92 E0 ; Zero extruder
  M106 S100 ; Start part cooling fan, 255=100%
  G0 Z10 F3000
  _MOVE_TO_CENTER
  M109 S{ TOOL_TEMP }
  START_TOOL_PROBE_CRASH_DETECTION
  M117 Printing

[gcode_macro CHANGE_NOZZLE]
gcode:
  M117 Nozzle change
  M104 S240
  G90 ; Absolute pos
  G1 X175 Y0 Z100 F1800 ; Move to front
  M109 S240 ;Heat up the filament
  M83                            ; set extruder to relative
  G1 E5 F250                   ; extrude 5 mm
  G1 E-50 F1000                ; retract 5 cm
  M82                            ; set extruder to absolute
  M117 Ready to swap

[gcode_macro M104]
rename_existing: M104.1
description: [T<index>] [S<temperature>]
  Set tool temperature.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = "" %}
    {% set newparameters = newparameters ~ " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE{newparameters}
  {% else %}
    M104.1 {rawparams}
  {% endif %}

[gcode_macro M109]
rename_existing: M109.1
description: [T<index>] [S<temperature>]
  Set tool temperature and wait.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = "" %}
    {% set newparameters = newparameters ~ " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE WAIT=1 {newparameters}
  {% else %}
    M109.1 {rawparams}
  {% endif %}

[gcode_macro TOOLCHANGE_DEMO]
gcode:
    {% for n in range(20) %}
      T{ printer.toolchanger.tool_numbers | random }
    {% endfor %}